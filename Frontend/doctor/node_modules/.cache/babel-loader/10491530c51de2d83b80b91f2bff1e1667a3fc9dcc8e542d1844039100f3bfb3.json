{"ast":null,"code":"var _jsxFileName = \"D:\\\\ThinkarsHub\\\\New Project OPD\\\\Fend\\\\doctor\\\\src\\\\pages\\\\staff\\\\StaffDashboard.js\",\n  _s = $RefreshSig$();\n// ===== frontend/src/pages/staff/StaffDashboard.js =====\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API, authHeader } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StaffDashboard() {\n  _s();\n  const [date, setDate] = useState(\"\");\n  const [list, setList] = useState([]);\n  async function load() {\n    const {\n      data\n    } = await axios.get(API + \"/api/bookings\" + (date ? `?date=${date}` : \"\"), {\n      headers: {\n        ...authHeader(),\n        \"Cache-Control\": \"no-cache\",\n        \"Pragma\": \"no-cache\"\n      }\n    });\n\n    // ðŸ”¹ If staff is assigned to certain doctors, \n    // filter here (assuming backend gives doctor._id and req.user.doctorIds is stored in localStorage).\n    const raw = localStorage.getItem(\"user\");\n    let doctorIds = [];\n    if (raw) {\n      const u = JSON.parse(raw);\n      doctorIds = u.assignedDoctors || []; // keep assigned doctors in user object after login\n    }\n    let filtered = data;\n    if (doctorIds.length > 0) {\n      filtered = data.filter(b => {\n        var _b$doctor;\n        return doctorIds.includes((_b$doctor = b.doctor) === null || _b$doctor === void 0 ? void 0 : _b$doctor._id);\n      });\n    }\n    setList(filtered);\n  }\n  useEffect(() => {\n    load();\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Staff Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date filter\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(b => {\n        var _b$doctor2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [b.date, \" \", b.time, \" \\u2014 \", (_b$doctor2 = b.doctor) === null || _b$doctor2 === void 0 ? void 0 : _b$doctor2.name, \" \\u2014 \", b.name, \" (\", b.phone, \")\"]\n        }, b._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffDashboard, \"le14Ng91LEAemCCaTinICDG3ORU=\");\n_c = StaffDashboard;\nvar _c;\n$RefreshReg$(_c, \"StaffDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","API","authHeader","jsxDEV","_jsxDEV","StaffDashboard","_s","date","setDate","list","setList","load","data","get","headers","raw","localStorage","getItem","doctorIds","u","JSON","parse","assignedDoctors","filtered","length","filter","b","_b$doctor","includes","doctor","_id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","map","_b$doctor2","time","name","phone","_c","$RefreshReg$"],"sources":["D:/ThinkarsHub/New Project OPD/Fend/doctor/src/pages/staff/StaffDashboard.js"],"sourcesContent":["// ===== frontend/src/pages/staff/StaffDashboard.js =====\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API, authHeader } from \"../../api\";\r\n\r\nexport default function StaffDashboard() {\r\n  const [date, setDate] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n\r\n  async function load() {\r\n    const { data } = await axios.get(\r\n      API + \"/api/bookings\" + (date ? `?date=${date}` : \"\"),\r\n      {\r\n        headers: {\r\n          ...authHeader(),\r\n          \"Cache-Control\": \"no-cache\",\r\n          \"Pragma\": \"no-cache\",\r\n        },\r\n      }\r\n    );\r\n\r\n    // ðŸ”¹ If staff is assigned to certain doctors, \r\n    // filter here (assuming backend gives doctor._id and req.user.doctorIds is stored in localStorage).\r\n    const raw = localStorage.getItem(\"user\");\r\n    let doctorIds = [];\r\n    if (raw) {\r\n      const u = JSON.parse(raw);\r\n      doctorIds = u.assignedDoctors || []; // keep assigned doctors in user object after login\r\n    }\r\n\r\n    let filtered = data;\r\n    if (doctorIds.length > 0) {\r\n      filtered = data.filter((b) => doctorIds.includes(b.doctor?._id));\r\n    }\r\n\r\n    setList(filtered);\r\n  }\r\n\r\n  useEffect(() => {\r\n    load();\r\n  }, [date]);\r\n\r\n  return (\r\n    <div style={{ padding: 24 }}>\r\n      <h2>Staff Dashboard</h2>\r\n      <label>\r\n        Date filter{\" \"}\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n        />\r\n      </label>\r\n      <ul>\r\n        {list.map((b) => (\r\n          <li key={b._id}>\r\n            {b.date} {b.time} â€” {b.doctor?.name} â€” {b.name} ({b.phone})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}